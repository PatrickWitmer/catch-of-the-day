{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","HashRouter","basename","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.fb18c919.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  }\r\n\r\n  myInput = React.createRef();\r\n\r\n  goToStore = (event) => {\r\n    // 1. Stop the form from submitting\r\n    event.preventDefault();\r\n    // 2. Get the text from that input\r\n    const storeName = this.myInput.current.value;\r\n    // 3. Change the page to /store/whatever-they-entered\r\n    this.props.history.push(`/store/${storeName}`);\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter a Store</h2>\r\n        <input \r\n          type=\"text\"\r\n          ref={this.myInput} \r\n          required \r\n          placeholder=\"Store Name\" \r\n          defaultValue={getFunName()}>\r\n        </input>\r\n        <button type=\"submit\">Visit Store →</button>\r\n        </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Header = (props) => (\r\n  <header className=\"top\">\r\n  <h1>Catch \r\n    <span className=\"ofThe\">\r\n      <span className=\"of\">of</span> \r\n      <span className=\"the\">the</span> \r\n    </span>\r\n    Day\r\n  </h1>    \r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n    </h3> \r\n</header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func\r\n  };\r\n\r\n  renderOrder = key => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === 'available';\r\n    const transitionOptions = {\r\n      classNames: 'order',\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    };\r\n    // Make Sure the fish is loaded before we continue\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : 'fish'} is no longer available.\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 250, exit: 250 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count + fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>\r\n              &times;\r\n            </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === 'available';\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong> {formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func\r\n  }\r\n\r\n  createFish = (event) => {\r\n    // 1. Stop the form from submitting\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value), // Store things in cents\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addFish(fish);\r\n    //refresh form\r\n    event.currentTarget.reset();\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    deleteFish: PropTypes.func,\n    updatedFish: PropTypes.func,\n    index: PropTypes.string\n  }\n\n  handleChange = (event) => {\n    console.log(event.currentTarget.value);\n    //Update that Fish\n    //1. Take a copy of that current fish\n    const updatedFish = { \n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value \n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  }\n\n  render() {\n    return <div className=\"fish-edit\">\n      <input \n        type=\"text\" \n        name=\"name\" \n        onChange={this.handleChange} \n        value={this.props.fish.name} />\n      <input \n        type=\"text\" \n        name=\"price\" \n        onChange={this.handleChange} \n        value={this.props.fish.price} />\n      <select \n        type=\"text\" \n        name=\"status\" \n        onChange={this.handleChange} \n        value={this.props.fish.status} >\n        <option onChange={this.handleChange} value=\"available\">Fresh!</option>\n        <option onChange={this.handleChange} value=\"unavailable\">Sold Out!</option>\n      </select>\n      <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\n      <input \n        type=\"text\" \n        name=\"image\" \n        onChange={this.handleChange} \n        value={this.props.fish.image}\n      />\n\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n    </div>\n  }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's invetory.</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>\n      Login with Github\n    </button>\n    <button className=\"google\" onClick={() => props.authenticate('Google')}>\n      Login with Google\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyChRj7RPWxA_epRiIHS406nmov_AM4Ynpg\",\n  authDomain: \"catch-of-the-day-patrick-51c9f.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-patrick-51c9f.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase/app\"; import 'firebase/auth';\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if(user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    // 1. Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    // 2. Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // Save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      })\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  };\r\n\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log('Logging out.');\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  }\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out</button>\r\n\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n    return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. Check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner.</p>\r\n          {logout}\r\n       </div>\r\n      );\r\n    }\r\n\r\n    // 3. They must be the owner, just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n       {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm \r\n            key={key}\r\n            index={key} \r\n            fish={this.props.fishes[key]} \r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          /> \r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: 'Pacific Halibut',\r\n    image: '/images/hali.jpg',\r\n    desc:\r\n      'Everyone’s favorite white fish. We will cut it to the size you need and ship it.',\r\n    price: 1724,\r\n    status: 'available',\r\n  },\r\n\r\n  fish2: {\r\n    name: 'Lobster',\r\n    image: '/images/lobster.jpg',\r\n    desc:\r\n      'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\r\n    price: 3200,\r\n    status: 'available',\r\n  },\r\n\r\n  fish3: {\r\n    name: 'Sea Scallops',\r\n    image: '/images/scallops.jpg',\r\n    desc:\r\n      'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\r\n    price: 1684,\r\n    status: 'unavailable',\r\n  },\r\n\r\n  fish4: {\r\n    name: 'Mahi Mahi',\r\n    image: '/images/mahi.jpg',\r\n    desc:\r\n      'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\r\n    price: 1129,\r\n    status: 'available',\r\n  },\r\n\r\n  fish5: {\r\n    name: 'King Crab',\r\n    image: '/images/crab.jpg',\r\n    desc:\r\n      'Crack these open and enjoy them plain or with one of our cocktail sauces',\r\n    price: 4234,\r\n    status: 'available',\r\n  },\r\n\r\n  fish6: {\r\n    name: 'Atlantic Salmon',\r\n    image: '/images/salmon.jpg',\r\n    desc:\r\n      'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\r\n    price: 1453,\r\n    status: 'available',\r\n  },\r\n\r\n  fish7: {\r\n    name: 'Oysters',\r\n    image: '/images/oysters.jpg',\r\n    desc: 'A soft plump oyster with a sweet salty flavor and a clean finish.',\r\n    price: 2543,\r\n    status: 'available',\r\n  },\r\n\r\n  fish8: {\r\n    name: 'Mussels',\r\n    image: '/images/mussels.jpg',\r\n    desc:\r\n      'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\r\n    price: 425,\r\n    status: 'available',\r\n  },\r\n\r\n  fish9: {\r\n    name: 'Jumbo Prawns',\r\n    image: '/images/prawns.jpg',\r\n    desc:\r\n      'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\r\n    price: 2250,\r\n    status: 'available',\r\n  },\r\n};\r\n\r\nexport default fishes;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? 'Add to Order' : 'Extinct'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // First reinstate our localStorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if(localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef )})\r\n    } \r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes'\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n  }\r\n\r\n  // Prevent memory leak.\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    //this.state.fishes.push(fish);\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n  \r\n  updateFish = (key, updatedFish) => {\r\n    // 1. Take a copy of the current state\r\n    const fishes = { ...this.state.fishes};\r\n    // 2. Update that state\r\n    fishes[key] = updatedFish;\r\n    // 3. Set that to state\r\n    this.setState({ fishes });\r\n  }\r\n\r\n  deleteFish = (key) => {\r\n    // 1. take a copy of state\r\n    const fishes = { ...this.state.fishes};\r\n    // 2. update the state\r\n    fishes[key] = null;\r\n    // 3. Update state\r\n    this.setState({ fishes });\r\n  }\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  }\r\n\r\n  addToOrder = (key) => {\r\n    // 1. Take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call the setState to update our state object\r\n    this.setState({ order });\r\n  }\r\n\r\n  removeFromOrder = (key) => {\r\n    const order = { ...this.state.order };\r\n    delete order[key];\r\n    this.setState({ order });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"Fishes\">\r\n            {Object.keys(this.state.fishes).map(key => \r\n              <Fish \r\n                key={key} \r\n                index={key}\r\n                details={this.state.fishes[key]} \r\n                addToOrder={this.addToOrder} />\r\n            )}\r\n          </ul>\r\n        </div>\r\n        <Order \r\n          fishes={this.state.fishes} \r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory \r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish} \r\n          loadSampleFishes={this.loadSampleFishes} \r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>What is best in life? 404</h2>\r\n  </div>\r\n)\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n  <HashRouter basename=\"/catch-of-the-day\">\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));\r\n"],"sourceRoot":""}